[{"/app/src/index.js":"1","/app/src/serviceWorker.js":"2","/app/src/containers/App/App.js":"3","/app/src/containers/ManageTourists/ManageTourists.js":"4","/app/src/containers/ManageFlights/ManageFlights.js":"5","/app/src/containers/ManageTourists/EditTourist/EditTourist.js":"6","/app/src/containers/ManageTourists/AddTourist/AddTourist.js":"7","/app/src/containers/ManageFlights/EditFlight/EditFlight.js":"8","/app/src/components/Header/Header.js":"9","/app/src/containers/ManageFlights/AddFlight/AddFlight.js":"10","/app/src/components/Flight/Flight.js":"11","/app/src/containers/SearchStartingDestination/SearchStartingDestination.js":"12","/app/src/components/Footer/Footer.js":"13","/app/src/components/Tourist/FullTourist/FullTourist.js":"14","/app/src/components/Tourist/Tourist.js":"15","/app/src/components/Spinner/Spinner.js":"16","/app/src/containers/Login/Login.js":"17"},{"size":553,"mtime":1581882596752,"results":"18","hashOfConfig":"19"},{"size":5003,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2391,"mtime":1625490043755,"results":"21","hashOfConfig":"19"},{"size":4539,"mtime":1582370863399,"results":"22","hashOfConfig":"19"},{"size":4721,"mtime":1582317964078,"results":"23","hashOfConfig":"19"},{"size":7337,"mtime":1583579760182,"results":"24","hashOfConfig":"19"},{"size":5913,"mtime":1583583481121,"results":"25","hashOfConfig":"19"},{"size":7227,"mtime":1583583704058,"results":"26","hashOfConfig":"19"},{"size":1967,"mtime":1625490065747,"results":"27","hashOfConfig":"19"},{"size":5953,"mtime":1583583467208,"results":"28","hashOfConfig":"19"},{"size":1782,"mtime":1582206752582,"results":"29","hashOfConfig":"19"},{"size":5254,"mtime":1610200074625,"results":"30","hashOfConfig":"19"},{"size":1245,"mtime":1581888991718,"results":"31","hashOfConfig":"19"},{"size":715,"mtime":1605343328212,"results":"32","hashOfConfig":"19"},{"size":1475,"mtime":1583851616465,"results":"33","hashOfConfig":"19"},{"size":409,"mtime":1582200877433,"results":"34","hashOfConfig":"19"},{"size":186,"mtime":1625319294170,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1nc8ha1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/app/src/index.js",[],["79","80"],"/app/src/serviceWorker.js",[],"/app/src/containers/App/App.js",["81"],"/app/src/containers/ManageTourists/ManageTourists.js",["82","83","84"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Tourist from '../../components/Tourist/Tourist';\r\nimport classes from './ManageTourists.module.css';\r\nimport {Pagination, Row, Col, Alert} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\n\r\nclass ManageTourists extends Component {\r\n    state = {\r\n        tourists: [],\r\n        loading: false,\r\n        message: '',\r\n        totalResults: 0,\r\n        totalPages: 0,\r\n        currentPageNo: 0\r\n    }\r\n\r\n    fetchTheTourists = (updatedPageNo) => {\r\n        const pageNumber = updatedPageNo ? updatedPageNo : '';\r\n        axios.get('http://localhost:8081/tourist/all?page=' + pageNumber)\r\n            .then(response => {\r\n                const tourists = Object.entries(response.data);\r\n                const totalPages = tourists[4][1];\r\n                const resultNotFoundMsg = ! tourists[0][1].length\r\n                                        ? 'There are no more search results. Go back.'\r\n                                        : '';\r\n                /* const updatedtourists = Object.keys(tourists).map(key => {\r\n                     return tourists[key];\r\n                 });*/\r\n                this.setState({                    \r\n                    tourists: tourists[0][1],\r\n                    message: resultNotFoundMsg,\r\n                    loading: false,\r\n                    currentPageNo: updatedPageNo,\r\n                    totalPages: totalPages});\r\n                console.log(tourists);\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error) || error){\r\n                    this.setState({loading: false,\r\n                         message: 'Fetching data failed'})\r\n                }\r\n                console.log(error);\r\n                // this.setState({error: true});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currentPageNo = this.state.currentPageNo;\r\n\r\n        if(!this.state.loading){\r\n            this.setState({loading: true, message: ''}, () =>{\r\n                this.fetchTheTourists(currentPageNo)\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickPageChangeHandler = (type, e) =>{\r\n        e.preventDefault();\r\n        let updatedPageNo = '';\r\n        if(type === 'prev'){\r\n            updatedPageNo = this.state.currentPageNo - 1;\r\n            if(updatedPageNo <= 0){\r\n                updatedPageNo = 0;\r\n            }\r\n        }else{\r\n            updatedPageNo = this.state.currentPageNo + 1;\r\n        }\r\n        if(!this.state.loading){\r\n            this.setState({loading: true, message: ''}, () =>{\r\n                this.fetchTheTourists(updatedPageNo)\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickDeleteTouristHandler = (event, id) => {\r\n        event.preventDefault();\r\n        axios.delete('http://localhost:8081/tourist/' + id).then(() => {\r\n            this.fetchTheTourists();\r\n        })\r\n    }\r\n\r\n    \r\n    render(){\r\n        const {loading, message, currentPageNo, totalPages} = this.state;\r\n\r\n\r\n        let tourists = <p style ={{textAlign: 'center'}}>Something went wrong!</p>;\r\n        if(!this.state.error){\r\n            tourists = this.state.tourists.map(tourist => {\r\n                return(\r\n                        <Tourist\r\n                        key={tourist.id}\r\n                        id={tourist.id} \r\n                        name={tourist.name} \r\n                        surname={tourist.surname} \r\n                        dateOfBirth={tourist.dateOfBirth}\r\n                        delete={this.onClickDeleteTouristHandler}/>\r\n                )\r\n            })\r\n        }\r\n    return (\r\n        <Col className={classes.ManageTourists}>\r\n        <Row>\r\n        <Pagination>\r\n            <Pagination.First onClick={(event) => this.onClickPageChangeHandler('prev', event)}/>\r\n            <Pagination.Last onClick={(event) => this.onClickPageChangeHandler('next', event)}/>\r\n        </Pagination>\r\n        </Row>\r\n        <Row>\r\n        <Col className={classes.ManageTourists}>\r\n            {message && <Alert variant='danger'>{message}</Alert>}\r\n            {!loading ? tourists : <Spinner />}\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n        <Pagination>\r\n            <Pagination.First onClick={(event) => this.onClickPageChangeHandler('prev', event)}/>\r\n            <Pagination.Last onClick={(event) => this.onClickPageChangeHandler('next', event)}/>\r\n        </Pagination>\r\n        </Row>\r\n        </Col>\r\n        )\r\n    }\r\n}\r\nexport default ManageTourists;","/app/src/containers/ManageFlights/ManageFlights.js",["85","86","87"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Pagination, Row, Col, Alert} from 'react-bootstrap';\r\nimport Flight from '../../components/Flight/Flight';\r\nimport classes from './ManageFlights.module.css';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass ManageFlights extends Component {\r\n    state = {\r\n        flights: [],\r\n        loading: false,\r\n        message: '',\r\n        totalResults: 0,\r\n        totalPages: 0,\r\n        currentPageNo: 0\r\n    }\r\n\r\n    fetchTheFligths = (updatedPageNo) => {\r\n        let pageNumber = '';\r\n        if(updatedPageNo <= 0){\r\n            pageNumber = 0;\r\n        }else{\r\n            pageNumber = updatedPageNo ? updatedPageNo : '';\r\n        }\r\n        axios.get('http://localhost:8081/flight/all?page=' + pageNumber)\r\n            .then(response => {\r\n                const flights = Object.entries(response.data);\r\n                const totalPages = flights[4][1];\r\n                const resultNotFoundMsg = ! flights[0][1].length\r\n                                        ? 'There are no more search results. Go back.'\r\n                                        : '';\r\n\r\n                this.setState({                    \r\n                    flights: flights[0][1],\r\n                    message: resultNotFoundMsg,\r\n                    loading: false,\r\n                    currentPageNo: updatedPageNo,\r\n                    totalPages: totalPages});\r\n                console.log(flights);\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error) || error){\r\n                    this.setState({loading: false,\r\n                         message: 'Fetching data failed'})\r\n                }\r\n                console.log(error);\r\n                // this.setState({error: true});\r\n            });\r\n    }\r\n\r\n    onClickDeleteFlightHandler = (event, id) => {\r\n        event.preventDefault();\r\n        axios.delete('http://localhost:8081/flight/' + id).then(() => {\r\n            this.fetchTheFligths();\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currentPageNo = this.state.currentPageNo;\r\n        if(!this.state.loading){\r\n            this.setState({loading: true, message: ''}, () =>{\r\n                this.fetchTheFligths(currentPageNo)\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickPageChangeHandler = (type, e) =>{\r\n        e.preventDefault();\r\n        let updatedPageNo = '';\r\n        if(type === 'prev'){\r\n            updatedPageNo = this.state.currentPageNo - 1;\r\n            if(updatedPageNo <= 0){\r\n                updatedPageNo = 0;\r\n            }\r\n        }else{\r\n            updatedPageNo = this.state.currentPageNo + 1;\r\n        }\r\n        if(!this.state.loading){\r\n            this.setState({loading: true, message: ''}, () =>{\r\n                this.fetchTheFligths(updatedPageNo)\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {loading, message, currentPageNo, totalPages} = this.state;\r\n\r\n\r\n        let flights = <p style ={{textAlign: 'center'}}>Something went wrong!</p>;\r\n        if(!this.state.error){\r\n            flights = this.state.flights.map(flight => {\r\n                return(\r\n                        <Flight \r\n                        id={flight.id}\r\n                        key={flight.id}\r\n                        startingDestination={flight.startingDestination}\r\n                        flightStartingTime={flight.flightStartingTime}\r\n                        flightArrivalTime={flight.flightArrivalTime}\r\n                        capacity={flight.capacity}\r\n                        touristAmount={flight.touristAmount}\r\n                        price={flight.price}\r\n                        delete={this.onClickDeleteFlightHandler}\r\n                        />\r\n\r\n                )\r\n            })\r\n        }\r\n    return (\r\n        <Col className={classes.ManageFlights}>\r\n        <Row>\r\n        <Pagination>\r\n            <Pagination.First onClick={(event) => this.onClickPageChangeHandler('prev', event)}/>\r\n            <Pagination.Last onClick={(event) => this.onClickPageChangeHandler('next', event)}/>\r\n        </Pagination>\r\n        </Row>\r\n        <Row>\r\n        <Col className={classes.ManageFlights}>\r\n            {message && <Alert variant='danger'>{message}</Alert>}\r\n            {!loading ? flights : <Spinner />}\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n        <Pagination>\r\n            <Pagination.First onClick={(event) => this.onClickPageChangeHandler('prev', event)}/>\r\n            <Pagination.Last onClick={(event) => this.onClickPageChangeHandler('next', event)}/>\r\n        </Pagination>\r\n        </Row>\r\n        </Col>\r\n        )\r\n    }\r\n}\r\nexport default ManageFlights;","/app/src/containers/ManageTourists/EditTourist/EditTourist.js",["88"],"import React, {Component} from 'react'\r\nimport {Button, Card, Form} from 'react-bootstrap';\r\nimport classes from './EditTourist.module.css';\r\nimport axios from 'axios';\r\nimport Flight from '../../../components/Flight/Flight';\r\n\r\nclass EditTourist extends Component {\r\n    state = {\r\n        tourist: {\r\n            id: '',\r\n            name: '',\r\n            surname: '',\r\n            sex: '',\r\n            country: 0,\r\n            dateOfBirth: '',\r\n            notes: ''\r\n        },\r\n        loading: false,\r\n        message: '',\r\n\r\n        }\r\n\r\n    \r\n    getTouristFromDatabase = () =>{\r\n            axios.get('http://localhost:8081/tourist/' + this.props.match.params.id,)\r\n            .then(response => {\r\n                const tourist = Object.entries(response.data);\r\n                const resultNotFoundMsg = ! tourist.length\r\n                                        ? 'There are no more search results. Go back.'\r\n                                        : '';\r\n                this.setState({                    \r\n                    tourist: {\r\n                        name: tourist[0][1],\r\n                        surname: tourist[1][1],\r\n                        sex: tourist[2][1],\r\n                        country: tourist[3][1],\r\n                        dateOfBirth: tourist[4][1],\r\n                        notes: tourist[5][1],\r\n                        id: tourist[6][1]\r\n                    },\r\n                    message: resultNotFoundMsg,\r\n                    loading: false });\r\n                console.log(tourist);\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error) || error){\r\n                    this.setState({loading: false,\r\n                         message: 'Fetching data failed'})\r\n                }\r\n                console.log(error);\r\n                // this.setState({error: true});\r\n            });\r\n        }   \r\n\r\n    componentDidMount(){\r\n        this.getTouristFromDatabase();\r\n    }\r\n\r\n    updateTouristToDatabase = () =>{\r\n        const tourist = {\r\n            name: this.state.tourist.name,\r\n            surname: this.state.tourist.surname,\r\n            sex: this.state.tourist.sex,\r\n            country: this.state.tourist.country,\r\n            dateOfBirth: this.state.tourist.dateOfBirth,\r\n            notes: this.state.tourist.notes\r\n        }\r\n            axios.put('http://localhost:8081/tourist/' + this.props.match.params.id, tourist)\r\n            .then(\r\n                this.setState({\r\n                    tourist:{\r\n                        name: '',\r\n                        surname: '',\r\n                        sex: '',\r\n                        country: 0,\r\n                        dateOfBirth: '',\r\n                        notes: ''\r\n                    }\r\n\r\n                })\r\n            ).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    onClickUpdateTouristHandler = (e) =>{\r\n        this.updateTouristToDatabase();\r\n        \r\n    }\r\n\r\n    onSubmitHandler = event =>{\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        }\r\n        this.setState({validated: true});\r\n\r\n        if(form.checkValidity() === true){\r\n            this.onClickUpdateTouristHandler();\r\n        }\r\n    }\r\n\r\nrender(){\r\n    return (\r\n        <div className={classes.CenterForm}>\r\n                <Card style={{ width: '500px' }}>\r\n                    <Card.Header>Tourist ID: {this.state.tourist.id}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Form for editing tourist</Card.Title>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.onSubmitHandler}>\r\n                        <Form.Group controlId=\"setName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Type in your name\" value={this.state.tourist.name} onChange={(event) => this.setState({ tourist: {...this.state.tourist, name: event.target.value }})} />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">Type in your name</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"setSurname\">\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Type in your surname\" value={this.state.tourist.surname} onChange={(event) => this.setState({ tourist: {...this.state.tourist, surname: event.target.value } })} />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">Type in your surname</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"setSex\">\r\n                            <Form.Label>Sex</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Type in your sex\" value={this.state.tourist.sex} onChange={(event) => this.setState({ tourist: {...this.state.tourist, sex: event.target.value } })} />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">Type in your sex</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"setCountry\">\r\n                            <Form.Label>Country</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Type in your country\" value={this.state.tourist.country} onChange={(event) => this.setState({ tourist: {...this.state.tourist, country: event.target.value } })} />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">Type in your country</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"setDateOfBirth\">\r\n                            <Form.Label>Current date of birth: </Form.Label>\r\n                            <Form.Control required min=\"1900-01-01\" type=\"date\" value={this.state.tourist.dateOfBirth} onChange={(event) => this.setState({ tourist: {...this.state.tourist, dateOfBirth: event.target.value } })} />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"invalid\">Type in your name</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"setNotes\">\r\n                            <Form.Label>Type in any notes and any comments you have</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Type in notes\" value={this.state.tourist.notes} onChange={(event) => this.setState({ notes: event.target.value })} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Update tourist </Button>\r\n\r\n                    </Form>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditTourist;","/app/src/containers/ManageTourists/AddTourist/AddTourist.js",[],"/app/src/containers/ManageFlights/EditFlight/EditFlight.js",["89","90","91"],"import React, {Component} from 'react'\r\nimport {Button, Card, Form} from 'react-bootstrap';\r\nimport classes from './EditFlight.module.css';\r\nimport axios from 'axios';\r\nimport Flight from '../../../components/Flight/Flight';\r\n\r\nclass EditFlight extends Component {\r\n    state = {\r\n        flight: {\r\n            id: '',\r\n            startingDestination: '',\r\n            startingTime: '',\r\n            arrivalTime: '',\r\n            rocketCapacity: 0,\r\n            price: ''\r\n        },\r\n        loading: false,\r\n        message: '',\r\n\r\n        }\r\n\r\n    \r\n    getFlightFromDatabase = () =>{\r\n            axios.get('http://localhost:8081/flight/' + this.props.match.params.id,)\r\n            .then(response => {\r\n                const flight = Object.entries(response.data);\r\n                const resultNotFoundMsg = ! flight.length\r\n                                        ? 'There are no more search results. Go back.'\r\n                                        : '';\r\n                this.setState({                    \r\n                    flight: {\r\n                        startingDestination: flight[0][1],\r\n                        startingTime: flight[1][1],\r\n                        arrivalTime: flight[2][1],\r\n                        rocketCapacity: flight[3][1],\r\n                        price: flight[5][1],\r\n                        id: flight[7][1]\r\n                    },\r\n                    message: resultNotFoundMsg,\r\n                    loading: false });\r\n                console.log(flight);\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error) || error){\r\n                    this.setState({loading: false,\r\n                         message: 'Fetching data failed'})\r\n                }\r\n                console.log(error);\r\n                // this.setState({error: true});\r\n            });\r\n        }   \r\n\r\n    componentDidMount(){\r\n        this.getFlightFromDatabase();\r\n    }\r\n\r\n    updateFlightToDatabase = () =>{\r\n        const flight = {\r\n            startingDestination: this.state.flight.startingDestination,\r\n            flightStartingTime: this.state.flight.startingTime,\r\n            flightArrivalTime: this.state.flight.arrivalTime,\r\n            capacity: this.state.flight.rocketCapacity,\r\n            price: this.state.flight.price,\r\n        }\r\n            axios.put('http://localhost:8081/flight/' + this.props.match.params.id, flight)\r\n            .then(\r\n                this.setState({\r\n                    flight:{\r\n                        startingDestination: '',\r\n                        startingTime: '',\r\n                        arrivalTime: '',\r\n                        rocketCapacity: 0,\r\n                        price: ''\r\n                    }\r\n\r\n                })\r\n            ).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    onSubmitHandler = event =>{\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        }\r\n        this.setState({validated: true});\r\n\r\n        if(form.checkValidity() === true){\r\n            this.updateFlightToDatabase();\r\n        }\r\n    }\r\n\r\nrender(){\r\n    return (\r\n        <div className={classes.CenterForm}>\r\n                <Card style={{ width: '500px' }}>\r\n                    <Card.Header>Flight ID: {this.state.flight.id}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Form for editing flight</Card.Title>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.onSubmitHandler}>\r\n                            <Form.Group controlId=\"setStartingDestination\">\r\n                                <Form.Label>Set the starting destination - city name</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Type in city name\" value={this.state.flight.startingDestination} onChange={(event) => this.setState({ flight: {...this.state.flight, startingDestination: event.target.value }})} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in city name</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setStartingTime\">\r\n                                <Form.Label>Current starting date is: </Form.Label>\r\n                                <Form.Control required min=\"2020-01-01T00:00\" type=\"datetime-local\"  value={this.state.flight.startingTime} onChange={(event) => this.setState({ flight: {...this.state.flight, startingTime: event.target.value }})} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in starting date</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setArrivalTime\">\r\n                                <Form.Label>Current arrival date is: </Form.Label>\r\n                                <Form.Control required min=\"2020-01-01T00:00\" type=\"datetime-local\"  value={this.state.flight.arrivalTime} onChange={(event) => this.setState({ flight: {...this.state.flight, arrivalTime: event.target.value }})} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in arrival date</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setRocketCapacity\">\r\n                                <Form.Label>Set the rocket capacity (number between 10 and 20)</Form.Label>\r\n                                <Form.Control required min=\"10\" max=\"20\" type=\"number\" placeholder=\"Type in the rocket capacity\" min=\"10\" max=\"20\" value={this.state.flight.rocketCapacity} onChange={(event) => this.setState({ flight: {...this.state.flight, rocketCapacity: event.target.value }})} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in rocket capacity</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setPrice\">\r\n                                <Form.Label>Set the price per seat</Form.Label>\r\n                                <Form.Control required type=\"number\" placeholder=\"Type in the price\" step=\"0.01\" min=\"100.00\" value={this.state.flight.price} onChange={(event) => this.setState({ flight: {...this.state.flight, price: event.target.value }})} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in price</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\"> Update the flight </Button>\r\n\r\n                        </Form>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditFlight;","/app/src/components/Header/Header.js",["92","93"],"/app/src/containers/ManageFlights/AddFlight/AddFlight.js",["94","95","96"],"import React, {Component} from 'react'\r\nimport {Button, Card, Form} from 'react-bootstrap';\r\nimport classes from './AddFlight.module.css';\r\nimport axios from 'axios';\r\nimport Flight from '../../../components/Flight/Flight';\r\n\r\nclass AddFlight extends Component {\r\n    state = {\r\n        startingDestination: '',\r\n        startingTime: '',\r\n        arrivalTime: '',\r\n        rocketCapacity: 0,\r\n        price: ''\r\n    }\r\n\r\n    postFlightToDatabase = () =>{\r\n        const flight = {\r\n            startingDestination: this.state.startingDestination,\r\n            flightStartingTime: this.state.startingTime,\r\n            flightArrivalTime: this.state.arrivalTime,\r\n            capacity: this.state.rocketCapacity,\r\n            price: this.state.price,\r\n        }\r\n        if(this.props.match.params.id == null){\r\n            axios.post('http://localhost:8081/flight/', flight)\r\n            .then(\r\n                this.setState({\r\n                    startingDestination: '',\r\n                    startingTime: '',\r\n                    arrivalTime: '',\r\n                    rocketCapacity: 0,\r\n                    price: ''\r\n                })\r\n            ).catch(error => console.log(error))\r\n        }else{\r\n            axios.patch('http://localhost:8081/tourist/' + this.props.match.params.id, flight)\r\n            .then(\r\n                this.setState({\r\n                    startingDestination: '',\r\n                    startingTime: '',\r\n                    arrivalTime: '',\r\n                    rocketCapacity: 0,\r\n                    price: ''\r\n                })\r\n            ).catch(error => console.log(error))\r\n        }\r\n\r\n    }\r\n\r\n    addFlightHandler = () =>{\r\n        this.postFlightToDatabase();\r\n        \r\n    }\r\n\r\n    onSubmitHandler = event =>{\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        }\r\n        this.setState({validated: true});\r\n\r\n        if(form.checkValidity() === true){\r\n            this.addFlightHandler();\r\n        }\r\n    }\r\n\r\nrender(){\r\n    return (\r\n        <div className={classes.CenterForm}>\r\n                <Card style={{ width: '500px' }}>\r\n                    <Card.Header>CosmicFligths</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Form for adding flight</Card.Title>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.onSubmitHandler}>\r\n                            <Form.Group controlId=\"setStartingDestination\">\r\n                                <Form.Label>Set the starting destination - city name</Form.Label>\r\n                                <Form.Control required type=\"text\" placeholder=\"Type in city name\" value={this.state.startingDestination} onChange={(event) => this.setState({ startingDestination: event.target.value })} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in city name</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setStartingTime\">\r\n                                <Form.Label>Set the starting date for the flight</Form.Label>\r\n                                <Form.Control required min=\"2020-01-01T00:00\" type=\"datetime-local\"  value={this.state.startingTime} onChange={(event) => this.setState({ startingTime: event.target.value })} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in starting date</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setArrivalTime\">\r\n                                <Form.Label>Set the arrival date for the flight</Form.Label>\r\n                                <Form.Control required min=\"2020-01-01T03:00\" type=\"datetime-local\"  value={this.state.arrivalTime} onChange={(event) => this.setState({ arrivalTime: event.target.value })} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in arrival date</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setRocketCapacity\">\r\n                                <Form.Label>Set the rocket capacity (number between 10 and 20)</Form.Label>\r\n                                <Form.Control required min=\"10\" max=\"20\" type=\"number\" placeholder=\"Type in the rocket capacity\" min=\"10\" max=\"20\" value={this.state.rocketCapacity} onChange={(event) => this.setState({ rocketCapacity: event.target.value })} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type inrocket capacity</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"setPrice\">\r\n                                <Form.Label>Set the price per seat</Form.Label>\r\n                                <Form.Control required type=\"number\" placeholder=\"Type in the price\" step=\"0.01\" min=\"100.00\" value={this.state.price} onChange={(event) => this.setState({ price: event.target.value })} />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Type in price per seat</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\"> Add the flight </Button>\r\n\r\n                        </Form>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default AddFlight;","/app/src/components/Flight/Flight.js",["97","98"],"import React from 'react';\r\nimport {Button, Card, ButtonGroup, ToggleButton} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport rocket from '../../assets/afr.png';\r\nimport classes from './Flight.module.css';\r\nimport axios from 'axios';\r\n\r\nconst flight = (props) => {\r\n    return(\r\n    <Card className={classes.Flight} >\r\n        <Link to={'flight/' + props.id} style={{ textDecoration: 'none' }}>\r\n            <Card.Img variant=\"top\" src={rocket} alt=\"house\" />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    {props.startingDestination} \r\n                    <br />\r\n                    {props.price} $\r\n                </Card.Title>\r\n                <Card.Text>\r\n\r\n                    Current capacity:\r\n                    <br />\r\n                    {props.touristAmount}/{props.capacity}\r\n                    <br />\r\n                    Start: {props.flightStartingTime}\r\n                    <br />\r\n                    Arrival: {props.flightArrivalTime} \r\n                </Card.Text>\r\n            </Card.Body>\r\n         </Link>\r\n\r\n\r\n        <ButtonGroup toggle style={{ textDecoration: 'none' }}> \r\n                <Link to={'addTourist/' + props.id} >\r\n                    <Button variant=\"primary\" onClick={props.clicked}>\r\n                    Reserve\r\n                    </Button>\r\n                </Link>\r\n                <Link to={'editFlight/' + props.id} >\r\n                <Button variant=\"warning\" onClick={props.edit}>\r\n                Edit\r\n                </Button>\r\n                </Link>\r\n                <Button variant=\"danger\" onClick={(event) => props.delete(event, props.id)}>\r\n                Delete\r\n                </Button>\r\n            </ButtonGroup>\r\n    </Card>\r\n    )\r\n\r\n};\r\nexport default flight;","/app/src/containers/SearchStartingDestination/SearchStartingDestination.js",["99","100","101","102","103","104","105"],"import React, { useState, Component } from 'react';\r\nimport {Button, Card, Col, Form, Alert, Pagination} from 'react-bootstrap';\r\nimport {Link, Route, Switch} from 'react-router-dom';\r\nimport classes from './SearchStartingDestination.module.css';\r\nimport axios from 'axios';\r\nimport Flight from '../../components/Flight/Flight';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass SearchStartingDestination extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        flights: [],\r\n        query: '',\r\n        loading: false,\r\n        message: '',\r\n        totalResults: 0,\r\n        totalPages: 0,\r\n        currentPageNo: 0,};\r\n\r\n        this.cancel = '';\r\n    }\r\n\r\n    fetchSearchResults = (updatedPageNo = '', query) => {\r\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\r\n        const searchUrl = `http://localhost:8081/flight/searchByDestination?name=${query}${pageNumber}`;\r\n        if(this.cancel){\r\n            this.cancel.cancel();\r\n        }\r\n        this.cancel = axios.CancelToken.source();\r\n\r\n        axios.get(searchUrl, {\r\n            cancelToken: this.cancel.token\r\n        }).then(response => {\r\n                const flights = Object.entries(response.data);\r\n                const totalPages = flights[4][1];\r\n                const resultNotFoundMsg = ! flights[0][1].length\r\n                                        ? 'There are no more search results. Try another starting location.'\r\n                                        : '';\r\n                this.setState({\r\n                    flights: flights[0][1],\r\n                    message: resultNotFoundMsg,\r\n                    loading: false,\r\n                    currentPageNo: updatedPageNo,\r\n                    totalPages: totalPages\r\n\r\n                });\r\n                console.log(flights);\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error) || error){\r\n                    this.setState({loading: false,\r\n                         message: 'Fetching data failed'})\r\n                }\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onInputChangeHandler = (e) =>{\r\n        const query = e.target.value;\r\n        if(!query){\r\n            this.setState({query, flights: [], message: ''})\r\n        }else{\r\n            this.setState({query: query, loading: true, message: ''}, () => {\r\n                this.fetchSearchResults(0, query);\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickPageChangeHandler = (type, e) =>{\r\n        e.preventDefault();\r\n        let updatedPageNo = '';\r\n        if(type === 'prev'){\r\n            updatedPageNo = this.state.currentPageNo - 1;\r\n            if(updatedPageNo <= 0){\r\n                updatedPageNo = 0;\r\n            }\r\n        }else{\r\n            updatedPageNo = this.state.currentPageNo + 1;\r\n        }\r\n        if(!this.state.loading){\r\n            this.setState({loading: true, message: ''}, () =>{\r\n                this.fetchSearchResults(updatedPageNo, this.state.query)\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {query, loading, message, currentPageNo, totalPages} = this.state;\r\n\r\n        let flights = <p style ={{textAlign: 'center'}}>Something went wrong!</p>;\r\n\r\n        if(!this.state.error){\r\n            flights = this.state.flights.map(flight => {\r\n                return(\r\n                        <Flight\r\n                        id={flight.id} \r\n                        key={flight.id}\r\n                        startingDestination={flight.startingDestination}\r\n                        flightStartingTime={flight.flightStartingTime}\r\n                        flightArrivalTime={flight.flightArrivalTime}\r\n                        capacity={flight.capacity}\r\n                        touristAmount={flight.touristAmount}\r\n                        price={flight.price}\r\n                        />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <Col className={classes.SearchStartingDestination }>\r\n            \r\n            <Card className={classes.SearchBar}>\r\n                <Card.Body>\r\n                    <Card.Title>Find the place you can begin your space journey</Card.Title>\r\n                    <Form>\r\n                        <Form.Group controlId=\"searchStartingDestination\">\r\n                            <Form.Label>Type in you starting destination</Form.Label>\r\n                            <Form.Control type=\"search\" placeholder=\"search for flight\" value={query} onChange={this.onInputChangeHandler} autocomplete=\"off\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n           <Pagination className={classes.SearchBar}>\r\n                    <Pagination.First onClick={(event) => this.onClickPageChangeHandler('prev', event)}/>\r\n                    <Pagination.Last onClick={(event) => this.onClickPageChangeHandler('next', event)}/>\r\n            </Pagination>\r\n\r\n            <Col className={classes.Flights}>\r\n            {message && <Alert variant='danger'>{message}</Alert>}\r\n            {!loading ? flights : <Spinner />}\r\n            </Col>\r\n    \r\n        </Col>\r\n        \r\n        )\r\n    }\r\n    \r\n};\r\nexport default SearchStartingDestination;","/app/src/components/Footer/Footer.js",[],"/app/src/components/Tourist/FullTourist/FullTourist.js",[],"/app/src/components/Tourist/Tourist.js",["106","107"],"import React from 'react';\r\nimport {Card, Button, ButtonGroup} from 'react-bootstrap';\r\nimport {Link, Route} from 'react-router-dom';\r\nimport Tourist from '../Tourist/Tourist';\r\nimport user from '../../assets/afu.png';\r\nimport classes from './Tourist.module.css';\r\n\r\nconst tourist = (props) => (\r\n    <React.Fragment>\r\n    <Card className={classes.Tourist} >\r\n        <Link to={'tourist/' + props.id} style={{ textDecoration: 'none' }}>\r\n\r\n            <Card.Img variant=\"top\" src={user} alt=\"user\" />\r\n            <Card.Body>\r\n                <Card.Title>{props.name} {props.surname}</Card.Title>\r\n                <Card.Text>\r\n                    {props.dateOfBirth}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Link>\r\n        <ButtonGroup toggle>\r\n            <Link to={'tourist/' + props.id}> \r\n                <Button variant=\"primary\" onClick={props.clicked}>\r\n                    Info\r\n                </Button>\r\n            </Link>\r\n            <Link to={'editTourist/' + props.id}> \r\n\r\n                <Button variant=\"warning\" onClick={props.edit}>\r\n                    Edit\r\n                </Button>\r\n            </Link>\r\n            <Link to={'tourist/' + props.id}> \r\n                <Button variant=\"danger\" onClick={(event) => props.delete(event, props.id)}>\r\n                    Delete\r\n                </Button>\r\n            </Link>\r\n        </ButtonGroup>\r\n\r\n    </Card>\r\n    </React.Fragment>\r\n    \r\n\r\n    \r\n);\r\nexport default tourist;","/app/src/components/Spinner/Spinner.js",[],"/app/src/containers/Login/Login.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":19,"column":20,"nodeType":"114","messageId":"115","endLine":19,"endColumn":31},{"ruleId":"112","severity":1,"message":"116","line":2,"column":9,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"117","line":87,"column":34,"nodeType":"114","messageId":"115","endLine":87,"endColumn":47},{"ruleId":"112","severity":1,"message":"118","line":87,"column":49,"nodeType":"114","messageId":"115","endLine":87,"endColumn":59},{"ruleId":"112","severity":1,"message":"116","line":2,"column":9,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"117","line":87,"column":34,"nodeType":"114","messageId":"115","endLine":87,"endColumn":47},{"ruleId":"112","severity":1,"message":"118","line":87,"column":49,"nodeType":"114","messageId":"115","endLine":87,"endColumn":59},{"ruleId":"112","severity":1,"message":"119","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":125,"column":130,"nodeType":"122","endLine":125,"endColumn":138},{"ruleId":"120","severity":1,"message":"121","line":125,"column":139,"nodeType":"122","endLine":125,"endColumn":147},{"ruleId":"112","severity":1,"message":"123","line":2,"column":22,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"112","severity":1,"message":"124","line":2,"column":36,"nodeType":"114","messageId":"115","endLine":2,"endColumn":47},{"ruleId":"112","severity":1,"message":"119","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":99,"column":130,"nodeType":"122","endLine":99,"endColumn":138},{"ruleId":"120","severity":1,"message":"121","line":99,"column":139,"nodeType":"122","endLine":99,"endColumn":147},{"ruleId":"112","severity":1,"message":"125","line":2,"column":36,"nodeType":"114","messageId":"115","endLine":2,"endColumn":48},{"ruleId":"112","severity":1,"message":"126","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"127","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"128","line":2,"column":9,"nodeType":"114","messageId":"115","endLine":2,"endColumn":15},{"ruleId":"112","severity":1,"message":"116","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"112","severity":1,"message":"129","line":3,"column":15,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"112","severity":1,"message":"130","line":3,"column":22,"nodeType":"114","messageId":"115","endLine":3,"endColumn":28},{"ruleId":"112","severity":1,"message":"117","line":89,"column":41,"nodeType":"114","messageId":"115","endLine":89,"endColumn":54},{"ruleId":"112","severity":1,"message":"118","line":89,"column":56,"nodeType":"114","messageId":"115","endLine":89,"endColumn":66},{"ruleId":"112","severity":1,"message":"129","line":3,"column":15,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"112","severity":1,"message":"131","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":15},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'setSignedIn' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'currentPageNo' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'Flight' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Form' is defined but never used.","'FormControl' is defined but never used.","'ToggleButton' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Tourist' is defined but never used.","no-global-assign","no-unsafe-negation"]